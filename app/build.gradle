apply plugin: 'com.android.application'
apply plugin: 'findbugs'
apply plugin: 'pmd'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"

    defaultConfig {
        applicationId "de.dhbw_loerrach.bluebacon"
        minSdkVersion 19
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
    }

    lintOptions {
        abortOnError false
        disable 'GoogleAppIndexingWarning'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support:design:23.4.0'
    compile 'org.altbeacon:android-beacon-library:2.9.1'
    compile 'com.loopj.android:android-async-http:1.4.9'
    compile project(':localservicediscovery')

    // Sony Smart Eyeglass
    compile project(':SmartExtensionAPI')
    compile project(':SmartExtensionUtils')
    compile project(':SmartEyeglassAPI')
}

task findbugsMain(type: FindBugs, dependsOn: "assembleDebug") {

    description 'Run findbugs on main'
    group 'verification'

    ignoreFailures = true // Do not stop build on errors (so CI can evaluate the results)

    effort = "max"
    reportLevel = "medium"
    classes = files("$project.buildDir/intermediates/classes")

    excludeFilter = file("./config/findbugs-android-exclude.xml")

    source = fileTree('src/main/java/')
    classpath = files()

    reports {
        xml.enabled = true
        xml.withMessages = true
        html.enabled = false
    }
}

task pmdMain (type: Pmd, dependsOn: "assembleDebug") {

    description 'Run pmd'
    group 'verification'

    ignoreFailures = true // Do not stop build on errors (so CI can evaluate the results)

    ruleSets = [ "java-basic", "java-strings", "java-braces", "java-design", "java-unusedcode" ]
    source = fileTree('src/main/java')

    reports {
        xml.enabled = true
        html.enabled = true
    }
}

check.doLast {
    project.tasks.getByName("findbugsMain").execute()
    project.tasks.getByName("pmdMain").execute()
}
